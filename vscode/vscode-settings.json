{
  "html.format.unformatted": "",
  "editor.multiCursorModifier": "ctrlCmd",
  "editor.fontSize": 16,
  "editor.fontFamily": "DejaVu Sans Mono, Consolas, Hack Nerd Font Mono, Sauce Code Pro, Menlo, monospace",
  "editor.defaultFormatter": "biomejs.biome",
  /*
    "[typescript]": {
        "editor.defaultFormatter": "biomejs.biome"
    },
    "[javascript]": {
        //"editor.defaultFormatter": "vscode.typescript-language-features"
        "editor.defaultFormatter": "biomejs.biome"
    },
  "[typescriptreact]": {
    "editor.defaultFormatter": "vscode.typescript-language-features"
  },
    */
  "[javascript]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[vue]": {
    "editor.defaultFormatter": "biomejs.biome"
  },
  "[json]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "vscode.json-language-features"
  },
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "[css]": {
    "editor.defaultFormatter": "vscode.css-language-features"
  },
  "[xml]": {
    "editor.defaultFormatter": "DotJoshJohnson.xml"
  },
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": false,
  "terminal.external.osxExec": "iTerm.app",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "redhat.telemetry.enabled": false,
  "editor.minimap.enabled": false,
  "npm.keybindingsChangedWarningShown": true,
  "security.workspace.trust.untrustedFiles": "open",
  "[python]": {
    "editor.formatOnType": true
  },
  "editor.inlineSuggest.enabled": true,
  "files.associations": {
    "*.config": "aspnetcorerazor",
    "*.js": "javascriptreact",
    "*.jsx": "javascriptreact",
    "*.ts": "typescriptreact",
    "*.tsx": "typescriptreact"
  },
  "js/ts.implicitProjectConfig.checkJs": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "javascript.updateImportsOnFileMove.enabled": "always",
  "terminal.integrated.env.osx": {},
  "terminal.integrated.rightClickBehavior": "default",
  "terminal.integrated.copyOnSelection": true,
"terminal.integrated.enableVisualBell": true,
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "terminal.integrated.profiles.osx": {
    "zsh": {
      "path": "/usr/local/bin/zsh",
      "args": [
        "-l"
      ]
    }
  },
  "terminal.integrated.fontFamily": "Hack Nerd Font Mono",
  "terminal.integrated.lineHeight": 1.1,
  "terminal.integrated.fontSize": 14,
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "aws.telemetry": false,
  "editor.inlayHints.enabled": "off",
  "editor.wordWrap": "off",
  "diffEditor.wordWrap": "off",
  "editor.guides.indentation": false,
  "workbench.colorCustomizations": {
    "editor.lineHighlightBackground": "#1073cf2d",
    "editor.lineHighlightBorder": "#9fced11f"
  },
  "editor.formatOnType": false,
  "git.autofetch": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "editor.snippetSuggestions": "top",
  "git.enableSmartCommit": true,
  "git.confirmSync": false,
  "files.autoSave": "afterDelay",
  "svelte.enable-ts-plugin": true,
  "workbench.colorTheme": "Monokai",
  "git.openRepositoryInParentFolders": "never",
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  /*"javascript.format.enable": false*/
  // Comment region folding
  "maptz.regionfolder": {
    "[javascript]": {
      "foldStart": "// region [NAME]",
      "foldStartRegex": "^[\\s]*//[\\s]*[#]*region[\\s]*(.*)[\\s]*",
      "foldEnd": "// endregion",
      "foldEndRegex": "^[\\s]*//[\\s]*[#]*endregion",
      "foldDefinitions": [
        {
          "foldStart": "/* region [NAME] */",
          "foldStartRegex": "^[\\s]*/\\*[\\s]*[#]*region[\\s]*(.*)[\\s]*\\*/[\\s]*$",
          "foldEnd": "/* endregion */",
          "foldEndRegex": "/\\*[\\s]*[#]*endregion"
        }
      ]
    },
    "[javascriptreact]": {
      "foldStart": "// region [NAME]",
      "foldStartRegex": "^[\\s]*//[\\s]*[#]*region[\\s]*(.*)[\\s]*",
      "foldEnd": "// endregion",
      "foldEndRegex": "^[\\s]*//[\\s]*[#]*endregion",
      "foldDefinitions": [
        {
          "foldStart": "/* region [NAME] */",
          "foldStartRegex": "^[\\s]*/\\*[\\s]*[#]*region[\\s]*(.*)[\\s]*\\*/[\\s]*$",
          "foldEnd": "/* endregion */",
          "foldEndRegex": "/\\*[\\s]*[#]*endregion"
        }
      ]
    },
    "[typescript]": {
      "foldStart": "// region [NAME]",
      "foldStartRegex": "^[\\s]*//[\\s]*[#]*region[\\s]*(.*)[\\s]*",
      "foldEnd": "// endregion",
      "foldEndRegex": "^[\\s]*//[\\s]*[#]*endregion",
      "foldDefinitions": [
        {
          "foldStart": "/* region [NAME] */",
          "foldStartRegex": "^[\\s]*/\\*[\\s]*[#]*region[\\s]*(.*)[\\s]*\\*/[\\s]*$",
          "foldEnd": "/* endregion */",
          "foldEndRegex": "/\\*[\\s]*[#]*endregion"
        }
      ]
    },
    "[typescriptreact]": {
      "foldStart": "// region [NAME]",
      "foldStartRegex": "^[\\s]*//[\\s]*[#]*region[\\s]*(.*)[\\s]*",
      "foldEnd": "// endregion",
      "foldEndRegex": "^[\\s]*//[\\s]*[#]*endregion",
      "foldDefinitions": [
        {
          "foldStart": "/* region [NAME] */",
          "foldStartRegex": "^[\\s]*/\\*[\\s]*[#]*region[\\s]*(.*)[\\s]*\\*/[\\s]*$",
          "foldEnd": "/* endregion */",
          "foldEndRegex": "/\\*[\\s]*[#]*endregion"
        }
      ]
    }
  },
  "workbench.productIconTheme": "material-product-icons",
  "accessibility.signals.terminalBell": {
    "sound": "on"
  },
  "workbench.iconTheme": "material-icon-theme",
  "glassit.alpha": 240,
  "prisma.showPrismaDataPlatformNotification": false,
  "github.copilot.editor.enableAutoCompletions": true,
  "workbench.startupEditor": "none",
  "[sql]": {
    "editor.defaultFormatter": "mtxr.sqltools"
  },
  "continue.enableTabAutocomplete": false
}
